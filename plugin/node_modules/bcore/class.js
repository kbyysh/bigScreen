Cube("/node_modules/bcore/class.js", [], function (module, exports, require, load, process, global) {

  function Class() {}
  Class.extend = function (newClass, proto) {
    if (typeof newClass !== 'function' && !proto) {
      proto = newClass;
      newClass = function newClass() {};
    } else if (!newClass) {
      newClass = function newClass() {};
    }
    var superClass = this;
    var prototype;
    var i;
    if (Object.create) {
      prototype = Object.create(superClass.prototype, {
        constructor: {
          value: newClass,
          enumerable: false,
          writable: true,
          configurable: true } });


    } else {
      prototype = new superClass();
      prototype.constructor = newClass;
    }
    if (proto) {
      for (i in proto) {
        if (proto.hasOwnProperty(i)) {
          prototype[i] = proto[i];
        }
      }
    }
    prototype._super = superClass;
    newClass.prototype = prototype;
    newClass.extend = arguments.callee;
    return newClass;
  };
  module.exports = Class;return module.exports;});